.assignments-list {
  min-height: 60px;
  display: block;
  background: white;
  overflow: hidden;
}

.assignment-item {
  padding: 1rem;
  color: rgba(0, 0, 0, 0.87);
  display: flex;
  flex-direction: row;
  align-items: center;
  justify-content: space-between;
  box-sizing: border-box;
  cursor: move;
  background: white;
  font-size: 14px;
  border-bottom: 1px solid #dee2e6;
}

.assignment-item:nth-of-type(even) {
  background: rgba(0,0,0,0.05);
}

.assignment-item:last-child {
  border: none;
}

/* https://material.angular.io/cdk/drag-drop/overview#styling */

.cdk-drag-preview {
  /* This is the element that will be rendered next to the user's cursor as they're dragging an item in a sortable list. */
  box-sizing: border-box;
  border-radius: 4px;
  box-shadow: 0 5px 5px -3px rgba(0, 0, 0, 0.2),
              0 8px 10px 1px rgba(0, 0, 0, 0.14),
              0 3px 14px 2px rgba(0, 0, 0, 0.12);
}

.cdk-drag-placeholder {
  /* This is element that will be shown instead of the real element as it's being dragged inside a cdkDropList. */
  opacity: 0;
}

.cdk-drag-animating {
  /* This class is added to a cdkDrag when the user has stopped dragging. */
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}

.cdk-drop-list-dragging .cdk-drag:not(.cdk-drag-placeholder) {
  /* A class that is added to cdkDropList while the user is dragging an item. */
  transition: transform 250ms cubic-bezier(0, 0, 0.2, 1);
}